name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      shell: pwsh
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        python -c "import importlib; importlib.import_module('pyaudio'); print('PyAudio import OK')"
    
    - name: Build executable
      run: |
        python build.py
    
    - name: Build onedir executable
      shell: pwsh
      run: |
        python -m PyInstaller --onedir --console --name deepgram_dictation --clean --paths . --hidden-import websocket --hidden-import pynput.keyboard._win32 --hidden-import pynput.mouse._win32 --exclude-module matplotlib --exclude-module numpy --exclude-module pandas --exclude-module scipy --exclude-module PIL --exclude-module tkinter --exclude-module PyQt5 --exclude-module PyQt6 --exclude-module PySide2 --exclude-module PySide6 deepgram_dictation.py
    
    - name: Create release packages (onefile and onedir)
      shell: pwsh
      run: |
        # Onefile package
        New-Item -ItemType Directory -Force -Path release_onefile | Out-Null
        Copy-Item dist/deepgram_dictation.exe release_onefile/
        Copy-Item dist/config.json release_onefile/
        Copy-Item dist/README.txt release_onefile/
        Compress-Archive -Path release_onefile/* -DestinationPath deepgram_dictation_windows.zip -Force

        # Onedir package (less likely to trigger antivirus)
        New-Item -ItemType Directory -Force -Path release_onedir | Out-Null
        Copy-Item -Recurse -Force dist/deepgram_dictation release_onedir/deepgram_dictation
        Copy-Item dist/config.json release_onedir/
        Copy-Item dist/README.txt release_onedir/
        Compress-Archive -Path release_onedir/* -DestinationPath deepgram_dictation_windows_onedir.zip -Force
    
    - name: Get version from tag
      id: get_version
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          # Deepgram Medical Dictation Tool ${{ steps.get_version.outputs.VERSION }}
          
          ## Download and Run
          Preferred (if antivirus flags the EXE):
          1. Download `deepgram_dictation_windows_onedir.zip`
          2. Extract the zip
          3. Run `deepgram_dictation/deepgram_dictation.exe`
          
          Alternate (single EXE):
          1. Download `deepgram_dictation_windows.zip`
          2. Extract to any folder
          3. Run `deepgram_dictation.exe`
          
          ## What's Included
          OneFile package:
          - `deepgram_dictation.exe` - Single executable
          - `config.json` - Configuration template
          - `README.txt` - Quick start guide
          
          OneDir package (less likely to trigger antivirus):
          - `deepgram_dictation/` - Folder containing `deepgram_dictation.exe` and required libraries
          - `config.json` - Configuration template
          - `README.txt` - Quick start guide
          
          ## Requirements
          - Windows 10/11 (64-bit)
          - Microphone
          - Internet connection
          - Deepgram API key
          
          Note: Some antivirus tools heuristically flag unsigned single-file executables. If you encounter a warning, use the OneDir package above. Code signing is planned for a future release.
        draft: false
        prerelease: false
    
    - name: Upload Release Asset (onefile)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deepgram_dictation_windows.zip
        asset_name: deepgram_dictation_windows.zip
        asset_content_type: application/zip

    - name: Upload Release Asset (onedir)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deepgram_dictation_windows_onedir.zip
        asset_name: deepgram_dictation_windows_onedir.zip
        asset_content_type: application/zip
    
    - name: Upload executable artifact
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: deepgram-dictation-windows
        path: |
          dist/deepgram_dictation.exe
          dist/config.json
          dist/README.txt