name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install build tools for PyAudio
        pip install pipwin
        pipwin refresh
        pipwin install pyaudio
        # Install other dependencies
        pip install pyperclip==1.8.2
        pip install pynput==1.7.6
        pip install websocket-client==1.6.4
        pip install cryptography==41.0.7
        pip install pyinstaller==6.3.0
    
    - name: Build executable
      run: |
        python build.py
    
    - name: Download UPX
      run: |
        Invoke-WebRequest -Uri "https://github.com/upx/upx/releases/download/v4.2.1/upx-4.2.1-win64.zip" -OutFile "upx.zip"
        Expand-Archive -Path "upx.zip" -DestinationPath "."
        $env:PATH += ";$PWD\upx-4.2.1-win64"
    
    - name: Compress executable with UPX
      run: |
        ./upx-4.2.1-win64/upx.exe --best --lzma dist/deepgram_dictation.exe || true
    
    - name: Create release package
      run: |
        # Create release directory
        New-Item -ItemType Directory -Force -Path release
        
        # Copy files to release directory
        Copy-Item dist/deepgram_dictation.exe release/
        Copy-Item dist/config.json release/
        Copy-Item dist/README.txt release/
        
        # Create zip archive
        Compress-Archive -Path release/* -DestinationPath deepgram_dictation_windows.zip
    
    - name: Get version from tag
      id: get_version
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          # Deepgram Medical Dictation Tool ${{ steps.get_version.outputs.VERSION }}
          
          ## Download and Run
          1. Download `deepgram_dictation_windows.zip`
          2. Extract to any folder
          3. Run `deepgram_dictation.exe`
          4. Enter your Deepgram API key
          5. Hold CTRL to dictate!
          
          ## What's Included
          - `deepgram_dictation.exe` - Standalone executable (no Python required)
          - `config.json` - Configuration template
          - `README.txt` - Quick start guide
          
          ## Requirements
          - Windows 10/11 (64-bit)
          - Microphone
          - Internet connection
          - Deepgram API key
          
          No installation or Python required!
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deepgram_dictation_windows.zip
        asset_name: deepgram_dictation_windows.zip
        asset_content_type: application/zip
    
    - name: Upload executable artifact
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: deepgram-dictation-windows
        path: |
          dist/deepgram_dictation.exe
          dist/config.json
          dist/README.txt